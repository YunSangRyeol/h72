<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">

	<resultMap id="memberResultMap" type="Member">
		<result property="userid" column="USER_ID" />
		<result property="levelcode" column="LEVEL_CODE" />
		<result property="name" column="NAME" />
		<result property="birthdate" column="BIRTHDATE" />
		<result property="email" column="EMAIL" />
		<result property="phone" column="PHONE" />
		<result property="postnum" column="POST_NUM" />
		<result property="address" column="ADDRESS" />
		<result property="addressdetail" column="ADDRESS_DETAIL" />
		<result property="point" column="POINT" />
		<result property="enrolldate" column="ENROLLDATE" />
		<result property="totalprice" column="TOTAL_PRICE" />
	</resultMap>

	<resultMap id="orderResultMap" type="Order">
		<result property="orderNo" column="ORDER_NO" />
		<result property="userId" column="USER_ID" />
		<result property="mainImgN1" column="MAIN_IMG_N1" />
		<result property="itemNameN1" column="ITEM_NAME_N1" />
		<result property="itemOptionNameN1" column="ITEM_OPTION_NAME_N1" />
		<result property="totalQuantity" column="TOTAL_QUANTITY" />
		<result property="kindsQuantity" column="KINDS_QUANTITY" />		
		<result property="totalPrice" column="TOTAL_PRICE" />
		<result property="paymentMethod" column="PAYMENT_METHOD" />
		<result property="paymentPoint" column="PYMNET_POINT" />
		<result property="totalSavingPoint" column="TOTAL_SAVING_POINT" />
		<result property="deliveryPee" column="DELEVERY_PEE" />
		<result property="phone" column="PHONE" />
		<result property="postNum" column="POST_NUM" />
		<result property="address" column="ADDRESS" />
		<result property="addressDetail" column="ADDRESS_DETAIL" />
		<result property="deliveryMessage" column="DELIVERY_MESSAGE" />
		<result property="orderStatus" column="ORDER_STATUS" />
		<result property="orderChange" column="ORDER_CHANGE" />
		<result property="enrollDate" column="ENROLL_DATE" />
	</resultMap>

	<resultMap id="orderContentsResultMap" type="OrderContents">
		<result property="orderNo" column="ORDER_NO" />
		<result property="itmeId" column="ITEM_ID" />
		<result property="itemName" column="ITEM_NAME" />
		<result property="itemOptionName" column="ITEM_OPTION_NAME" />
		<result property="itemDetailID" column="ITEM_DETAIL_ID" />
		<result property="mainImg" column="MAIN_IMG" />
		<result property="quantity" column="QUANTITY" />
		<result property="savingPoint" column="SAVING_POINT" />
		<result property="cost" column="COST" />
		<result property="message" column="MESSAGE" />
		<result property="kitYN" column="KIT_YN" />
	</resultMap>
	
	<resultMap id="totalOrderResultMap" type="TotalOrder">
		<result property="orderCount" column="COUNT" />
		<result property="totalQuantity" column="QUANTITY" />
		<result property="totalKind" column="KIND" />
		<result property="totalPrice" column="PRICE" />		
		<result property="bag" column="BAG" />	
		<result property="protect" column="PROTECT" />	
		<result property="food" column="FOOD" />	
		<result property="tool" column="TOOL" />	
		<result property="etc" column="ETC" />	
		<result property="kitYES" column="YES" />	
		<result property="kitNO" column="NO" />	
	</resultMap>

	<!-- MemberUpdate -->
	<select id="memberUPage" parameterType="String" resultType="member">
		SELECT * FROM USERS WHERE USER_ID = #{userid}
	</select>	
	
	<update id="memberModify" parameterType="Map">
		UPDATE USERS SET USER_PASS = #{userpwd}, POST_NUM = #{postnum}, ADDRESS = #{address}, ADDRESS_DETAIL = #{addressDetail}, PHONE = #{phone}, email= #{email}  WHERE USER_ID = #{userid}
	</update>
	
	<delete id="deleteMe" parameterType="String">
		DELETE FROM USERS WHERE USER_ID = #{userid}
	</delete>

	<!-- Member -->
	<select id="getMemberCount" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM USERS WHERE LEVEL_CODE != 'ADMIN' AND LEVEL_CODE != 'STEP'
	</select>
	<select id="getMemberList" parameterType="Map" resultType="member">
		SELECT
		    AAA.*
		FROM( SELECT COUNT(*) OVER() AS TOTAL_COUNT, AA.*
		    FROM( SELECT ROW_NUMBER() OVER (ORDER BY #{order} ) RNUM,
		            USER_ID, LEVEL_CODE, NAME, BIRTHDATE, EMAIL, PHONE, POST_NUM, ADDRESS, ADDRESS_DETAIL, POINT, ENROLLDATE, TOTAL_PRICE
		        FROM USERS
		        WHERE LEVEL_CODE != 'ADMIN' AND LEVEL_CODE != 'STEP'   
		        ) AA
		    ) AAA
		WHERE AAA.RNUM BETWEEN ((#{page}-1) * #{count} + 1) AND ( ((#{page}-1) * #{count} + 1) + #{count} -1)
	</select>
		
	<select id="adminSearchId" parameterType="String" resultType="member">
		SELECT * FROM USERS WHERE USER_ID LIKE '%' || #{id} || '%'
	</select>
	
	<select id="adminSearchName" parameterType="String" resultType="member">
		SELECT * FROM USERS WHERE NAME LIKE '%' || #{name} || '%'
	</select>
	
	<select id="adminSearchDate" parameterType="Map" resultType="member">
		SELECT * FROM USERS WHERE ENROLLDATE between TO_DATE(#{start})  and TO_DATE(#{end})+1
	</select>



	<!-- Order -->
	<select id="getOrderList" resultType="order">
		SELECT * FROM ORDER_LIST WHERE ENROLL_DATE between SYSDATE-3 and SYSDATE+1
	</select>
	
	<select id="getOrderContentsList" resultType="OrderContents">
		SELECT * FROM ORDER_LIST_CONTENTS
	</select>
	
	<update id="updateOrderStatus" parameterType="Map">
		UPDATE ORDER_LIST SET ORDER_STATUS = #{status}, ORDER_CHANGE = NULL WHERE ORDER_NO = #{orderNo}
	</update>
	
	<update id="updateOrderStatusPlus" parameterType="Map">
		UPDATE ORDER_LIST SET ORDER_STATUS = #{status}, ORDER_CHANGE = '접수중' WHERE ORDER_NO = #{orderNo}
	</update>
	
	<update id="updateOrderChange" parameterType="Map">
		UPDATE ORDER_LIST SET ORDER_CHANGE = #{change} WHERE ORDER_NO = #{orderNo}
	</update>

	<select id="orderASearchDate" parameterType="Map" resultType="order">
		SELECT * FROM ORDER_LIST WHERE ENROLL_DATE between TO_DATE(#{start})  and TO_DATE(#{end})+1
	</select>
	
	<select id="orderASearchUserID" parameterType="String" resultType="order">
		SELECT * FROM ORDER_LIST WHERE USER_ID = #{id} 
	</select>
		
	
	<select id="chartToday" resultType="TotalOrder" resultMap="totalOrderResultMap" parameterType="String">
		SELECT COUNT(*) AS COUNT, NVL(SUM(TOTAL_QUANTITY),0) AS QUANTITY, NVL(SUM(KINDS_QUANTITY),0) AS KIND, (NVL(SUM(TOTAL_PRICE),0)/10000) AS PRICE FROM ORDER_LIST WHERE ENROLL_DATE = TO_DATE(#{now}, 'YYYY-MM-DD')
	</select>
	
	<select id="nowYears"  parameterType="String" resultType="java.lang.Integer">
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS  FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '0101', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'0131', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '0201', 'YYMMDD') AND LAST_DAY(TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'02', 'YYMM'))
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '0301', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'0331', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '0401', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'0430', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '0501', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'0531', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '0601', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'0630', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '0701', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'0731', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '0801', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'0831', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '0901', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'0930', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '1001', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'1031', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '1101', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'1130', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS NOWYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') || '1201', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY') ||'1231', 'YYMMDD')
	</select>
	
	<select id="lastYears"  parameterType="String" resultType="java.lang.Integer">
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS LASTYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '0101', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'0131', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) AS LASTYEARS FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '0201', 'YYMMDD') AND LAST_DAY(TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'02', 'YYMM'))
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '0301', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'0331', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '0401', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'0430', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '0501', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'0531', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '0601', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'0630', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '0701', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'0731', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '0801', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'0831', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '0901', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'0930', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '1001', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'1031', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '1101', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'1130', 'YYMMDD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000,0) FROM ORDER_LIST WHERE ENROLL_DATE BETWEEN TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 || '1201', 'YYMMDD') AND TO_DATE(TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YY')-1 ||'1231', 'YYMMDD')
	</select>
	
	<select id="thisWeek"  parameterType="String" resultType="java.lang.Integer">
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = TO_DATE(#{now}, 'YYYY-MM-DD')
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-1)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-2)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-3)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-4)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-5)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-6)
	</select>
	
	<select id="LastWeek"  parameterType="String" resultType="java.lang.Integer">
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-7)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-8)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-9)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-10)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-11)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-12)
		UNION ALL
		SELECT NVL(SUM(TOTAL_PRICE)/10000, 0) FROM ORDER_LIST WHERE ENROLL_DATE = (TO_DATE(#{now}, 'YYYY-MM-DD')-13)
	</select>
	
	<select id="category"  parameterType="String" resultType="TotalOrder" resultMap="totalOrderResultMap">
		SELECT NVL(SUM(DECODE(SUBSTR(ITEM_ID, 1, 3), 'BAG', 1, 0)), 0) AS BAG ,
		       NVL(SUM(DECODE(SUBSTR(ITEM_ID, 1, 3), 'PRO', 1, 0)), 0) AS PROTECT ,
		       NVL(SUM(DECODE(SUBSTR(ITEM_ID, 1, 3), 'FOO', 1, 0)), 0) AS FOOD ,
		       NVL(SUM(DECODE(SUBSTR(ITEM_ID, 1, 3), 'TOO', 1, 0)), 0) AS TOO ,
		       NVL(SUM(DECODE(SUBSTR(ITEM_ID, 1, 3), 'ETC', 1, 0)), 0) AS ETC 
		FROM ORDER_LIST_CONTENTS
		WHERE SUBSTR(ORDER_NO, 1, 6) = TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YYMMDD')
	</select>
	
	<select id="kit"  parameterType="String" resultType="TotalOrder" resultMap="totalOrderResultMap">
		SELECT NVL(SUM(DECODE(KIT_YN, 'Y', 1, 0)), 0) AS YES ,
		       NVL(SUM(DECODE(KIT_YN, 'N', 1, 0)), 0) AS NO
		FROM ORDER_LIST_CONTENTS   
		WHERE SUBSTR(ORDER_NO, 1, 6) = TO_CHAR(TO_DATE(#{now}, 'YYYY-MM-DD'), 'YYMMDD')
	</select>
	
</mapper>
